@using System.Diagnostics
@using System.Threading
@using twaProject.Classes
@using Task = System.Threading.Tasks.Task
@inherits LayoutComponentBase
@inject StateManager stateManager
@inject ProtectedLocalStorage ProtectedLocalStorage
@inject NavigationManager NavigationManager
@inject ProtectedLocalStorage localStorage

<div class="page">
    @if (stateManager.isUserLogged)
    {
        <div class="sidebar">
            <NavMenu/>
        </div>
    }

    <main >
        @if (stateManager.isUserLogged)
        {
            <div class="top-row px-4">
                <a @onclick="LogOut">Log out</a>
            </div>
        }

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code{

    protected override async Task OnInitializedAsync()
    {
        var result =  await localStorage.GetAsync<WebUser>("currentUser");
        var userLogged= await localStorage.GetAsync<bool>("isUserLogged");
        stateManager.CurrentUser = result.Value;
        stateManager.isUserLogged = userLogged.Value;
    }

    async void LogOut()
    {
        await ProtectedLocalStorage.DeleteAsync("currentUser");
        await ProtectedLocalStorage.DeleteAsync("isUserLogged");
        
        NavigationManager.NavigateTo("/", true);
    }
    
}