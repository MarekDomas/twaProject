
@page "/createProjPage/{id:int?}"
@using twaProject.Classes
@inject StateManager stateManager
@inject NavigationManager navigationManager
@inject MainDbContext context
@inject ProtectedLocalStorage localStorage
@inject IJSRuntime JsRuntime

<h3>CreateProjPage</h3>
<div class="container mt-4">
    <div class="row">
        <div class="col-lg-6">
            <EditForm Model="_projekt" class="form-horizontal" FormName="newProjForm" OnValidSubmit="Submit">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                <ValidationSummary class="text-danger"></ValidationSummary>

                <div class="form-group">
                    <label for="name">Project name:</label>
                    <InputText id="name" type="text" name="inp" class="form-control" @bind-Value="_projekt.Name"></InputText>
                </div>

                <div class="form-group">
                    <label for="startDate">Start date:</label>
                    <InputDate id="startDate" class="form-control" @bind-Value="_projekt.StartDate"></InputDate>
                </div>

                <div class="form-group">
                    <label for="endDate">End date:</label>
                    <InputDate id="endDate" class="form-control" @bind-Value="_projekt.EndDate"></InputDate>
                </div>

                <div class="form-group">
                    <label for="description">Description:</label>
                    <InputText id="description" type="text" class="form-control" @bind-Value="_projekt.Description"></InputText>
                </div>

                <div class="form-group">
                    <label>Add member:</label>
                    <button @onclick="addSelect" type="button" class="btn btn-primary">Add</button>
                </div>

                <div class="form-group">
                    <select @onchange="addMember" class="form-control" disabled>
                        <option value="@stateManager.CurrentUser.Name">@stateManager.CurrentUser.Name</option>
                    </select>
                </div>
                
                @* Creating selects for new users *@
                @if (!edit || newUsersCount > 0)
                {
                    
                    <div class="form-group mt-3">
                        @for (var i = 0; i < memberUsers.Count; i++)
                        {
                            selectsCount++;
                            <div class="d-flex align-items-center mb-2">
                                <select @onchange="e =>  addMember(e)" class="form-control">
                                    @for (int j = -1; j < this.context.WebUser.Count(); j++)
                                    {
                                        if (j == -1)
                                        {
                                            <option value="">"Choose member"</option>
                                            continue;
                                        }

                                        var user = this.context.WebUser.ToList()[j];
                                        if (user.Name == stateManager.CurrentUser.Name)
                                        {
                                            continue;
                                        }

                                        <option value="@user.Name">@user.Name</option>
                                    }
                                </select>
                                
                                @if (i == memberUsers.Count - 1)
                                {
                                    <img alt="delete-button" src="@trashImage" class="ml-2" @onclick="e => removeSelect(this.index)" style="cursor: pointer;"/>
                                }
                            </div>
                        }
                    </div>
                }

                @* Creating selects for existing users *@
                @if(edit)
                {
                    <div class="form-group mt-3">
                        @foreach (var user in _projekt.MemberUsers)
                        {
                            if (user.WebUserId == stateManager.CurrentUser.WebUserId )
                            {
                                continue;
                            }
                            if (memberUsers.Contains(user))
                            {
                                continue;
                            }
                            
                            <div class="d-flex align-items-center mb-2">
                                <select disabled class="form-control">
                                    <option>@user.Name</option>
                                </select>
                                <img alt="delete-button" src="@trashImage" class="ml-2" @onclick="e => removeSelect(user.WebUserId)" style="cursor: pointer;"/>
                            </div>
                            existingUsersCount++;
                            selectsCount++;
                        }
                    </div>
                }

                <button type="submit" class="btn btn-success mt-3">Submit</button>
            </EditForm>
        </div>

        <div class="col-lg-6">
            @foreach (var task in tasksInProjekt)
            {
                <div class="card mb-3">
                    <div class="card-body">
                        <p class="card-text">@task.Name</p>
                        <p class="card-text">@task.WebUser.Name</p>
                        <button type="button" class="btn btn-info" @onclick="e => editTask(e,task.TaskId)">Show details</button>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" @bind="@task.IsCompleted" disabled/>
                            <label class="form-check-label">Completed</label>
                        </div>
                    </div>
                </div>
            }

            <button type="button" class="btn btn-primary mt-3" @onclick="addTask">Add task</button>
            @if (!projectExists)
            {
                <p class="text-danger mt-2">Save project before adding tasks.</p>
            }
        </div>
    </div>
</div>
